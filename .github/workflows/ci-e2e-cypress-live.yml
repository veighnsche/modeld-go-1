name: CI (E2E Cypress UI + Live API)

on:
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e-cypress-live:
    name: E2E (Cypress UI + Live API)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # Avoid using pnpm cache here because pnpm may not be installed yet in local act images

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        # Let action read the version from package.json's packageManager field

      - name: Install headless display (xvfb)
        run: |
          if command -v sudo >/dev/null 2>&1; then
            sudo apt-get update -y && sudo apt-get install -y xvfb
          else
            apt-get update -y && apt-get install -y xvfb
          fi

      - name: Install Cypress system dependencies (Ubuntu)
        run: |
          set -euo pipefail
          PKGS="\
          libnss3 \
          libatk-bridge2.0-0 \
          libgtk-3-0 \
          libgbm1 \
          libasound2 \
          libxss1 \
          libxtst6 \
          libnotify-dev \
          xauth \
          fonts-liberation \
          libdrm2 \
          "
          if command -v sudo >/dev/null 2>&1; then
            sudo apt-get update -y && sudo apt-get install -y $PKGS
          else
            apt-get update -y && apt-get install -y $PKGS
          fi

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'

      - name: Cache Go modules and build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build testctl
        run: |
          mkdir -p bin
          go build -o bin/testctl ./cmd/testctl

      - name: Install deps (Go + JS) via testctl
        run: bin/testctl install all

      - name: Run Cypress (auto; falls back to mock on CI)
        env:
          WEB_PORT: 5173
        run: bin/testctl test web auto

      - name: Upload Cypress videos and screenshots on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-artifacts-live
          path: |
            e2e/artifacts/screenshots
            e2e/artifacts/videos
