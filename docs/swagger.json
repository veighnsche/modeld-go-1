{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/healthz": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/infer": {
            "post": {
                "description": "Streams inference results as NDJSON lines. Each line is a JSON object.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/x-ndjson"
                ],
                "tags": [
                    "infer"
                ],
                "summary": "Inference",
                "parameters": [
                    {
                        "description": "Inference request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.InferRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Optional per-request log level override: off|error|info|debug",
                        "name": "log",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Optional per-request log level override: off|error|info|debug",
                        "name": "X-Log-Level",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Legacy flag; when '1' enables token debug logging",
                        "name": "X-Log-Infer",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NDJSON stream",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/models": {
            "get": {
                "description": "Returns available models discovered by the registry.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "models"
                ],
                "summary": "List models",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ModelsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/readyz": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Readiness check",
                "responses": {
                    "200": {
                        "description": "ready",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "loading",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "description": "Returns runtime status of loaded instances and resource usage.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status"
                ],
                "summary": "Server status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "types.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "HTTP status code.\nexample: 400",
                    "type": "integer",
                    "example": 400
                },
                "error": {
                    "description": "Error message.\nexample: invalid JSON body",
                    "type": "string",
                    "example": "invalid JSON body"
                }
            }
        },
        "types.InferRequest": {
            "type": "object",
            "properties": {
                "max_tokens": {
                    "description": "Maximum number of new tokens to generate.\nexample: 128",
                    "type": "integer",
                    "example": 128
                },
                "model": {
                    "description": "Optional model identifier. If empty, the server default is used.\nexample: tinyllama-q4",
                    "type": "string",
                    "example": "tinyllama-q4"
                },
                "prompt": {
                    "description": "Required prompt text to generate a completion for.\nexample: Write a haiku about the ocean.",
                    "type": "string",
                    "example": "Write a haiku about the ocean."
                },
                "seed": {
                    "description": "Random seed for reproducibility; 0 or omitted lets the server choose.\nexample: 42",
                    "type": "integer",
                    "example": 42
                },
                "stop": {
                    "description": "Optional stop sequences. Generation stops when any sequence is matched.\nexample: [\"\\n\\n\",\"END\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"\\n\\n\"",
                        "\"END\"]"
                    ]
                },
                "stream": {
                    "description": "If true, stream results as NDJSON tokens. When false, the server may still stream internally but buffer.\nexample: true",
                    "type": "boolean",
                    "example": true
                },
                "temperature": {
                    "description": "Sampling temperature (higher = more random).\nexample: 0.7",
                    "type": "number",
                    "example": 0.7
                },
                "top_p": {
                    "description": "Nucleus sampling probability.\nexample: 0.9",
                    "type": "number",
                    "example": 0.9
                }
            }
        },
        "types.InstanceStatus": {
            "type": "object",
            "properties": {
                "est_vram_mb": {
                    "description": "Estimated VRAM usage in MB.\nexample: 1200",
                    "type": "integer",
                    "example": 1200
                },
                "inflight": {
                    "description": "Number of in-flight requests currently being processed.\nexample: 1",
                    "type": "integer",
                    "example": 1
                },
                "last_used_unix": {
                    "description": "Last time this instance served a request (unix seconds).\nexample: 1700000000",
                    "type": "integer",
                    "example": 1700000000
                },
                "max_queue_depth": {
                    "description": "Maximum queued requests allowed before backpressure triggers.\nexample: 32",
                    "type": "integer",
                    "example": 32
                },
                "model_id": {
                    "description": "ID of the model this instance serves.\nexample: tinyllama-q4",
                    "type": "string",
                    "example": "tinyllama-q4"
                },
                "queue_len": {
                    "description": "Current queue length for incoming requests.\nexample: 0",
                    "type": "integer",
                    "example": 0
                },
                "state": {
                    "description": "Current lifecycle state of the instance (e.g., unloaded, loading, ready).\nexample: ready",
                    "type": "string",
                    "example": "ready"
                }
            }
        },
        "types.Model": {
            "type": "object",
            "properties": {
                "family": {
                    "description": "Optional family (e.g., llama, mistral, phi).\nexample: llama",
                    "type": "string",
                    "example": "llama"
                },
                "id": {
                    "description": "Stable identifier for the model.\nexample: tinyllama-q4",
                    "type": "string",
                    "example": "tinyllama-q4"
                },
                "name": {
                    "description": "Human-friendly name.\nexample: TinyLlama (Q4)",
                    "type": "string",
                    "example": "TinyLlama (Q4)"
                },
                "path": {
                    "description": "Absolute path to the model file on disk.\nexample: /home/user/models/TinyLlama.Q4_K_M.gguf",
                    "type": "string",
                    "example": "/home/user/models/TinyLlama.Q4_K_M.gguf"
                },
                "quant": {
                    "description": "Quantization level or variant string.\nexample: Q4_K_M",
                    "type": "string",
                    "example": "Q4_K_M"
                }
            }
        },
        "types.ModelsResponse": {
            "type": "object",
            "properties": {
                "models": {
                    "description": "List of available models.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Model"
                    }
                }
            }
        },
        "types.StatusResponse": {
            "type": "object",
            "properties": {
                "budget_mb": {
                    "description": "VRAM budget in MB across all instances.\nexample: 8192",
                    "type": "integer",
                    "example": 8192
                },
                "error": {
                    "description": "Optional top-level error message.",
                    "type": "string"
                },
                "evictions_total": {
                    "description": "Total number of evictions performed to free VRAM.\nexample: 5",
                    "type": "integer",
                    "example": 5
                },
                "instances": {
                    "description": "Loaded/managed instances.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.InstanceStatus"
                    }
                },
                "last_error": {
                    "description": "Last error observed by the manager (if any).",
                    "type": "string"
                },
                "loads_total": {
                    "description": "Total number of model loads.\nexample: 12",
                    "type": "integer",
                    "example": 12
                },
                "margin_mb": {
                    "description": "Reserved VRAM margin in MB.\nexample: 512",
                    "type": "integer",
                    "example": 512
                },
                "server_time_unix": {
                    "description": "Server time in unix seconds.\nexample: 1700000000",
                    "type": "integer",
                    "example": 1700000000
                },
                "uptime_seconds": {
                    "description": "Uptime of the server in seconds.\nexample: 3600",
                    "type": "integer",
                    "example": 3600
                },
                "used_est_mb": {
                    "description": "Estimated used VRAM in MB.\nexample: 2048",
                    "type": "integer",
                    "example": 2048
                }
            }
        }
    }
}